{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CrudService {\n  constructor(persoanjeHttp) {\n    this.persoanjeHttp = persoanjeHttp;\n    this.API = 'http://localhost/Leyenda/leyenda-main/personaje.php';\n  }\n  ObtenerPersonaje() {\n    return this.persoanjeHttp.get(this.API);\n  }\n  AgregarPersonaje(datosPersonaje) {\n    return this.persoanjeHttp.post(this.API + \"?insertar=1\", datosPersonaje);\n  }\n  BorrarPersonaje(id_personaje) {\n    return this.persoanjeHttp.get(this.API + \"?borrar=\" + id_personaje);\n  }\n  ObtenerPersonaj(id_personaje) {\n    return this.persoanjeHttp.get(this.API + \"?consultar_personaje=\" + id_personaje);\n  }\n  EditarPersonaje(id_personaje, datosPersonaje) {\n    return this.persoanjeHttp.post(this.API + \"?actualizar=\" + id_personaje, datosPersonaje);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});\nexport { CrudService };","map":{"version":3,"names":["CrudService","constructor","persoanjeHttp","API","ObtenerPersonaje","get","AgregarPersonaje","datosPersonaje","post","BorrarPersonaje","id_personaje","ObtenerPersonaj","EditarPersonaje","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ALEX-\\Desktop\\Procramas\\Leyenda\\Leyenda\\src\\app\\servicio\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientJsonpModule } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { personaje } from './persoanje';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService { //Enlace que usa un archivo php como API\n  API:String='http://localhost/Leyenda/leyenda-main/personaje.php';\n\n  constructor(private persoanjeHttp:HttpClient) { }\n     \n  \n  ObtenerPersonaje(){ //Funcion que obtiene los personajes para la tabla\n    return this.persoanjeHttp.get(this.API as any);\n  }\n\n  AgregarPersonaje(datosPersonaje:personaje):Observable<any>{\n    return this.persoanjeHttp.post(this.API+\"?insertar=1\",datosPersonaje);\n}\n\n\n  BorrarPersonaje(id_personaje:any):Observable<any>{\n    return this.persoanjeHttp.get(this.API+\"?borrar=\"+id_personaje);\n}\n  ObtenerPersonaj(id_personaje:any):Observable<any>{\n    return this.persoanjeHttp.get(this.API+\"?consultar_personaje=\"+id_personaje);\n}\n\n\n  EditarPersonaje(id_personaje:any,datosPersonaje:any):Observable<any>{\n    return this.persoanjeHttp.post(this.API+\"?actualizar=\"+id_personaje,datosPersonaje);\n}\n}"],"mappings":";;AAKA,MAGaA,WAAW;EAGtBC,YAAoBC,aAAwB;IAAxB,KAAAA,aAAa,GAAbA,aAAa;IAFjC,KAAAC,GAAG,GAAQ,qDAAqD;EAEhB;EAGhDC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,aAAa,CAACG,GAAG,CAAC,IAAI,CAACF,GAAU,CAAC;EAChD;EAEAG,gBAAgBA,CAACC,cAAwB;IACvC,OAAO,IAAI,CAACL,aAAa,CAACM,IAAI,CAAC,IAAI,CAACL,GAAG,GAAC,aAAa,EAACI,cAAc,CAAC;EACzE;EAGEE,eAAeA,CAACC,YAAgB;IAC9B,OAAO,IAAI,CAACR,aAAa,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,UAAU,GAACO,YAAY,CAAC;EACnE;EACEC,eAAeA,CAACD,YAAgB;IAC9B,OAAO,IAAI,CAACR,aAAa,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,uBAAuB,GAACO,YAAY,CAAC;EAChF;EAGEE,eAAeA,CAACF,YAAgB,EAACH,cAAkB;IACjD,OAAO,IAAI,CAACL,aAAa,CAACM,IAAI,CAAC,IAAI,CAACL,GAAG,GAAC,cAAc,GAACO,YAAY,EAACH,cAAc,CAAC;EACvF;;AAzBaP,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhB,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPnB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}